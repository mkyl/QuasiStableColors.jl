var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Coloring","page":"API","title":"Coloring","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"refine_stable\nrefine_fixpoint\nrefine_bipartite\nColor","category":"page"},{"location":"api/#QuasiStableColors.refine_stable","page":"API","title":"QuasiStableColors.refine_stable","text":"Compute the stable coloring for the graph with vertices V and edges E.\n\n\n\n\n\n","category":"function"},{"location":"api/#QuasiStableColors.refine_fixpoint","page":"API","title":"QuasiStableColors.refine_fixpoint","text":"Compute a quasi-stable coloring for the graph with vertices V and edges E. Provide eps for a coloring with q-error eps or early_stop for a coloring with a specific size.\n\n\n\n\n\n","category":"function"},{"location":"api/#QuasiStableColors.refine_bipartite","page":"API","title":"QuasiStableColors.refine_bipartite","text":"Equivalent to refine_fixpoint() but optimized for bipartite graphs.\n\n\n\n\n\n","category":"function"},{"location":"api/#Max-flow","page":"API","title":"Max-flow","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"lifted_maxflow","category":"page"},{"location":"applications/#Applications","page":"Applications","title":"Applications","text":"","category":"section"},{"location":"applications/#Max-flow/min-cut","page":"Applications","title":"Max-flow/min-cut","text":"","category":"section"},{"location":"applications/#Betweenness-Centrality","page":"Applications","title":"Betweenness Centrality","text":"","category":"section"},{"location":"applications/#Linear-Optimization","page":"Applications","title":"Linear Optimization","text":"","category":"section"},{"location":"#Quasi-Stable-Coloring","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"","category":"section"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"Graph compression for performant approximations","category":"page"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"QuasiStableColors.jl is a library for compressing graphs and approximating graph algorithms. The compressed graphs are computed using an algorithm called quasi-stable coloring, which results in a much smaller graph while preserving its key properties. This approach is introduced in the research paper \"Quasi-stable Coloring for Graph Compression.\"","category":"page"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"A major advantage of this approach is that many algorithms can be computed directly on the compressed graph, without needing decompression. This results in an effective  approximation of many graph algorithms. Applications implemented in this library are:","category":"page"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"Betweenness centrality\nMaximum-flow/minimum-cut\nLinear optimization","category":"page"},{"location":"#Citation-Format","page":"Quasi-Stable Coloring","title":"Citation Format","text":"","category":"section"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"If you use this algorithm, we ask that you cite our paper:","category":"page"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"@misc {\n    title = \"Quasi-stable Coloring for Graph Compression: Approximating Max-Flow, Linear Programs, and Centrality\"\n    author = \"Moe Kayali and Dan Suciu\"\n}","category":"page"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"Quasi-stabling coloring was developed at the School of Computer Science in the University of Washington, Seattle.","category":"page"},{"location":"#Getting-Started","page":"Quasi-Stable Coloring","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"The Tutorial section contains examples and code to get started with using this library.","category":"page"},{"location":"#Reference","page":"Quasi-Stable Coloring","title":"Reference","text":"","category":"section"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"Reference documentation for all the public functions of this library can be found in the API section. Specific sections explain the applications: maximum-flow/minimum-cut problems, betweenness centrality computation and linear optimization.  ","category":"page"},{"location":"#Researchers'-Guide","page":"Quasi-Stable Coloring","title":"Researchers' Guide","text":"","category":"section"},{"location":"","page":"Quasi-Stable Coloring","title":"Quasi-Stable Coloring","text":"Want to extend quasi-stable coloring to a new domain? Perhaps you want to develop a variant of approximate colorings? The Internals section covers these topics.","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Hello","category":"page"}]
}
